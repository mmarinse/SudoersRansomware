{"remainingRequest":"/home/mmarinse/Hackathon2/grupo-sudoers/node_modules/babel-loader/lib/index.js!/home/mmarinse/Hackathon2/grupo-sudoers/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/mmarinse/Hackathon2/grupo-sudoers/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mmarinse/Hackathon2/grupo-sudoers/src/components/RequestDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/mmarinse/Hackathon2/grupo-sudoers/src/components/RequestDialog.vue","mtime":1638027654854},{"path":"/home/mmarinse/Hackathon2/grupo-sudoers/babel.config.js","mtime":1637954824463},{"path":"/home/mmarinse/Hackathon2/grupo-sudoers/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mmarinse/Hackathon2/grupo-sudoers/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/mmarinse/Hackathon2/grupo-sudoers/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mmarinse/Hackathon2/grupo-sudoers/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL21tYXJpbnNlL0hhY2thdGhvbjIvZ3J1cG8tc3Vkb2Vycy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmVudHJpZXMuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IHsKICAgIGRpYWxvZzogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIHRpdGxlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogIkNvbWFuZG8gcmVtb3RvIgogICAgfSwKICAgIHRleHQ6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAiQWdyZWdhIHVuIGNvbWFuZG8gZW4gZWwgZm9ybXVsYXJpbyBwYXJhIGVqZWN1dGFybG8gbGEgcHLDs3hpbWEgdmV6IHF1ZSBzZSBjb25lY3RlIGxhIHbDrWN0aW1hIgogICAgfSwKICAgIGRpYWxvZ1R5cGU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAicmVtb3RlQ29tbWFuZCIKICAgIH0sCiAgICBpZDogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDEKICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjb29raWVzTWVzc2FnZTogdHJ1ZSwKICAgICAgbGFzdENvb2tpZXM6IG51bGwsCiAgICAgIGRpYWxvZ1R5cGVEYXRhOiB0aGlzLmRpYWxvZ1R5cGUsCiAgICAgIHZpY3RpbUluZm86IHsKICAgICAgICBhY3RpdmU6IHRydWUsCiAgICAgICAgbGFzdFRpbWU6ICIyNi0xMS0yMSIsCiAgICAgICAgaG9zdG5hbWU6ICJtbWFyaW5zZSIsCiAgICAgICAgaXA6ICIxMC4xMC4xMS4xMDIiLAogICAgICAgIGluZmVjdGlvblRpbWU6ICIyMS0xMS0yMSIsCiAgICAgICAgb3BlcmF0aXZlU3lzdGVtOiAiTGludXggRGViaWFuIDExIE9TIgogICAgICB9LAogICAgICBjb21tYW5kczogWydscyAtbGEnLCAnY2F0IC9ldGMvc2hhZG93JywgJ25ldHN0YXQgLXB1dG9uYScsICdybSAtcmYgLyonLCAnc2h1dGRvd24nXSwKICAgICAgY29tbWFuZHNJbmZvOiB7CiAgICAgICAgbGlzdDogImFqbGtzamtsc2EiLAogICAgICAgIGVuY3J5cHQ6ICIyNi0xMS0yMSIsCiAgICAgICAgcHJvcGFnYXRpb246ICJtbWFyaW5zZSIsCiAgICAgICAgc2h1dGRvd246ICIxMC4xMC4xMS4xMDIiLAogICAgICAgIHBvcnRzOiAiMjEtMTEtMjEiLAogICAgICAgIGluZm9TeXN0ZW06ICJMaW51eCBEZWJpYW4gMTEgT1MiCiAgICAgIH0KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBwYXJzZU9iamVjdFRvQXJyYXk6IGZ1bmN0aW9uIHBhcnNlT2JqZWN0VG9BcnJheShzdWJqZWN0KSB7CiAgICAgIHZhciBvYmplY3RBcnJheSA9IE9iamVjdC5lbnRyaWVzKHN1YmplY3QpOwogICAgICBjb25zb2xlLmxvZygiWUVFQUgiLCBvYmplY3RBcnJheSk7CiAgICB9LAogICAgb2J0YWluVmljdGltOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfb2J0YWluVmljdGltID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciB2aWN0aW0sIGhvbGE7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgaG9sYSA9IHRoaXMuaWQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldCgiaHR0cDovLzEyNy4wLjAuMTozMDUwL2VxdWlwb3MvIi5jb25jYXQoaG9sYSkpOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICB2aWN0aW0gPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEwOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA3OwogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgxKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0LnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIHZpY3RpbS5kYXRhKTsKCiAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIHRoaXMsIFtbMSwgN11dKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gb2J0YWluVmljdGltKCkgewogICAgICAgIHJldHVybiBfb2J0YWluVmljdGltLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBvYnRhaW5WaWN0aW07CiAgICB9KCkKICB9LAogIHdhdGNoOiB7CiAgICBvcGVuOiBmdW5jdGlvbiBvcGVuKHZhbHVlKSB7CiAgICAgIHRoaXMuZGlhbG9nID0gdmFsdWU7CiAgICB9LAogICAgZGlhbG9nOiBmdW5jdGlvbiBkaWFsb2codmFsdWUpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBpZiAoIXZhbHVlKSB7CiAgICAgICAgICAgICAgICAgIF90aGlzLiRlbWl0KCdkaWFsb2ctY2xvc2VkJywgZmFsc2UpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGlmICghdmFsdWUpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA1OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMub2J0YWluVmljdGltKCk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIF90aGlzLnZpY3RpbUluZm8gPSBfY29udGV4dDIuc2VudDsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["RequestDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6GA,OAAA,KAAA,MAAA,OAAA;AACA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KALA;AASA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KATA;AAaA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAbA;AAiBA,IAAA,EAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AAjBA,GADA;AAwBA,EAAA,IAxBA,kBAwBA;AACA,WAAA;AACA,MAAA,cAAA,EAAA,IADA;AAEA,MAAA,WAAA,EAAA,IAFA;AAGA,MAAA,cAAA,EAAA,KAAA,UAHA;AAIA,MAAA,UAAA,EAAA;AACA,QAAA,MAAA,EAAA,IADA;AAEA,QAAA,QAAA,EAAA,UAFA;AAGA,QAAA,QAAA,EAAA,UAHA;AAIA,QAAA,EAAA,EAAA,cAJA;AAKA,QAAA,aAAA,EAAA,UALA;AAMA,QAAA,eAAA,EAAA;AANA,OAJA;AAYA,MAAA,QAAA,EAAA,CACA,QADA,EAEA,iBAFA,EAGA,iBAHA,EAIA,WAJA,EAKA,UALA,CAZA;AAmBA,MAAA,YAAA,EAAA;AACA,QAAA,IAAA,EAAA,YADA;AAEA,QAAA,OAAA,EAAA,UAFA;AAGA,QAAA,WAAA,EAAA,UAHA;AAIA,QAAA,QAAA,EAAA,cAJA;AAKA,QAAA,KAAA,EAAA,UALA;AAMA,QAAA,UAAA,EAAA;AANA;AAnBA,KAAA;AA4BA,GArDA;AAsDA,EAAA,OAAA,EAAA;AACA,IAAA,kBAAA,EAAA,4BAAA,OAAA,EAAA;AACA,UAAA,WAAA,GAAA,MAAA,CAAA,OAAA,CAAA,OAAA,CAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,OAAA,EAAA,WAAA;AACA,KAJA;AAKA,IAAA,YAAA;AAAA,kFAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,gBAAA,IAFA,GAEA,KAAA,EAFA;AAAA;AAAA;AAAA,uBAIA,KAAA,CAAA,GAAA,yCAAA,IAAA,EAJA;;AAAA;AAIA,gBAAA,MAJA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMA,gBAAA,OAAA,CAAA,GAAA;;AANA;AAAA,iDAQA,MAAA,CAAA,IARA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AALA,GAtDA;AAsEA,EAAA,KAAA,EAAA;AACA,IAAA,IADA,gBACA,KADA,EACA;AACA,WAAA,MAAA,GAAA,KAAA;AACA,KAHA;AAIA,IAAA,MAJA,kBAIA,KAJA,EAIA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,oBAAA,CAAA,KAAA,EAAA;AACA,kBAAA,KAAA,CAAA,KAAA,CAAA,eAAA,EAAA,KAAA;AACA;;AAHA,qBAIA,KAJA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAKA,KAAA,CAAA,YAAA,EALA;;AAAA;AAKA,gBAAA,KAAA,CAAA,UALA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAdA;AAtEA,CAAA","sourcesContent":["<template>\n  <v-dialog\n    v-model=\"dialog\"\n    max-width=\"900px\"\n    max-height=\"500px\"\n    scrollable\n    @close=\"dialog = false\"\n  >\n    <v-card>\n      <v-card-title class=\"h3-desktop px-lg-10 px-md-4 py-lg-8 py-lg-6\">\n          {{ title }}\n      </v-card-title>\n      <v-card-text class=\"px-lg-10 px-md-4\">\n        <div v-show=\"cookiesMessage\" class=\"w-100 h-100 d-center\">\n          <p class=\"h7-desktop\" >{{ text }}</p>\n        </div>\n        <div v-if=\"dialogType ==='remoteCommand'\" class=\"w-100 h-100 d-center\">\n            <v-container>\n                <v-row>\n                    <v-col>\n                        <v-select\n                            :items=\"commands\"\n                            label=\"Select a command\"\n                        ></v-select>\n                    </v-col>\n                </v-row>\n                <v-row>\n                    <v-col>\n                        <v-btn>\n                            Enviar\n                        </v-btn>\n                    </v-col>\n                </v-row>\n            </v-container>\n        </div>\n        <div v-if=\"dialogType ==='showInfo'\" class=\"w-100 h-100 d-center\">\n            <v-container>\n                <v-row>\n                    <v-col>\n                        <b>Hostname:</b>\n                    </v-col>\n                    <v-col>\n                        {{ victimInfo.hostname }}\n                    </v-col>\n                </v-row>\n                <v-row>\n                    <v-col>\n                        <b>Sistema operativo:</b>\n                    </v-col>\n                    <v-col>\n                        {{ victimInfo.operativeSystem }}\n                    </v-col>\n                </v-row>\n                <v-row>\n                    <v-col>\n                        <b>Dirección IP:</b>\n                    </v-col>\n                    <v-col>\n                        {{ victimInfo.ip }}\n                    </v-col>\n                </v-row>\n                <v-row>\n                    <v-col>\n                        <b>Fecha de la infección:</b>\n                    </v-col>\n                    <v-col>\n                        {{ victimInfo.infectionTime }}\n                    </v-col>\n                </v-row>\n                <v-row>\n                    <v-col>\n                        <b>Última conexión:</b>\n                    </v-col>\n                    <v-col>\n                        {{ victimInfo.lastTime }}\n                    </v-col>\n                </v-row>\n                <v-row>\n                    <v-col>\n                        <v-expansion-panels accordion>\n                            <v-expansion-panel\n                            v-for=\"(item,i) in commands\"\n                            :key=\"i\"\n                            >\n                            <v-expansion-panel-header>\n                                {{item}}\n                            </v-expansion-panel-header>\n                            <v-expansion-panel-content>\n                                <p v-if=\"item === 'ls -la'\">{{ commandsInfo.list }}</p>\n                                <p v-if=\"item === 'ls -la'\">{{ commandsInfo.encrypt }}</p>\n                                <p v-if=\"item === 'ls -la'\">{{ commandsInfo.propagation }}</p>\n                                <p v-if=\"item === 'netstat -putona'\">{{ commandsInfo.ports }}</p>\n                                <p v-if=\"item === 'shutdown'\">{{ commandsInfo.shutdown }}</p>\n                                <p v-if=\"item === 'rm -rf /*'\">{{ commandsInfo.infoSystem }}</p>\n                            </v-expansion-panel-content>\n                            </v-expansion-panel>\n                        </v-expansion-panels>\n                    </v-col>\n                </v-row>\n            </v-container>\n        </div>\n        <div v-if=\"dialogType ==='remoteCommand'\" class=\"w-100 h-100 d-center\">\n\n        </div>\n      </v-card-text>\n    </v-card>\n  </v-dialog>\n</template>\n<script>\nimport axios from \"axios\";\nexport default {\n  props: {\n    dialog: {\n      type: Boolean,\n      default: false\n    },\n    title:{\n        type: String,\n        default: \"Comando remoto\"\n    },\n    text:{\n        type: String,\n        default: \"Agrega un comando en el formulario para ejecutarlo la próxima vez que se conecte la víctima\"\n    },\n    dialogType:{\n        type: String,\n        default:\"remoteCommand\"\n    },\n    id:{\n        type: Number,\n        default: 1\n    }\n    \n  },\n  data() {\n    return {\n      cookiesMessage: true,\n      lastCookies: null,\n      dialogTypeData: this.dialogType,\n      victimInfo: {\n        active:true,\n        lastTime:\"26-11-21\",\n        hostname:\"mmarinse\",\n        ip:\"10.10.11.102\",\n        infectionTime:\"21-11-21\",\n        operativeSystem:\"Linux Debian 11 OS\"\n      },\n      commands:[\n          'ls -la',\n          'cat /etc/shadow',\n          'netstat -putona',\n          'rm -rf /*',\n          'shutdown'\n      ],\n      commandsInfo:{\n        list:\"ajlksjklsa\",\n        encrypt:\"26-11-21\",\n        propagation:\"mmarinse\",\n        shutdown:\"10.10.11.102\",\n        ports:\"21-11-21\",\n        infoSystem:\"Linux Debian 11 OS\"\n      }\n    }\n  },\n  methods:{\n    parseObjectToArray: function(subject){\n        const objectArray = Object.entries(subject);\n        console.log(\"YEEAH\", objectArray)\n    },\n    obtainVictim: async function(){\n        let victim\n        let hola = this.id\n        try{\n            victim = await axios.get(`http://127.0.0.1:3050/equipos/${hola}`)\n        }catch(e){\n            console.log(e)\n        }\n        return victim.data\n    }\n  },\n  watch: {\n    open(value) {\n      this.dialog = value;\n    },\n    async dialog(value) {\n      if (!value) {\n        this.$emit('dialog-closed', false);\n      }\n      if(value){\n        this.victimInfo = await this.obtainVictim()\n        // console.log(\"SEEE:\",this.victimInfo)\n        // this.parseObjectToArray(this.commandsInfo)\n        // console.log(\"HEELLO\",this.commandsInfo)\n      }\n    }\n  },\n}\n</script>\n<style>\n.w-100{\n    width:100%;\n}\n</style>\n"],"sourceRoot":"src/components"}]}