{"remainingRequest":"/home/mmarinse/Hackathon2/grupo-sudoers/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/mmarinse/Hackathon2/grupo-sudoers/src/components/RequestDialog.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/mmarinse/Hackathon2/grupo-sudoers/src/components/RequestDialog.vue","mtime":1638027654854},{"path":"/home/mmarinse/Hackathon2/grupo-sudoers/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mmarinse/Hackathon2/grupo-sudoers/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/mmarinse/Hackathon2/grupo-sudoers/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/mmarinse/Hackathon2/grupo-sudoers/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/mmarinse/Hackathon2/grupo-sudoers/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi53LTEwMHsKICAgIHdpZHRoOjEwMCU7Cn0K"},{"version":3,"sources":["RequestDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuMA;AACA;AACA","file":"RequestDialog.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-dialog\n    v-model=\"dialog\"\n    max-width=\"900px\"\n    max-height=\"500px\"\n    scrollable\n    @close=\"dialog = false\"\n  >\n    <v-card>\n      <v-card-title class=\"h3-desktop px-lg-10 px-md-4 py-lg-8 py-lg-6\">\n          {{ title }}\n      </v-card-title>\n      <v-card-text class=\"px-lg-10 px-md-4\">\n        <div v-show=\"cookiesMessage\" class=\"w-100 h-100 d-center\">\n          <p class=\"h7-desktop\" >{{ text }}</p>\n        </div>\n        <div v-if=\"dialogType ==='remoteCommand'\" class=\"w-100 h-100 d-center\">\n            <v-container>\n                <v-row>\n                    <v-col>\n                        <v-select\n                            :items=\"commands\"\n                            label=\"Select a command\"\n                        ></v-select>\n                    </v-col>\n                </v-row>\n                <v-row>\n                    <v-col>\n                        <v-btn>\n                            Enviar\n                        </v-btn>\n                    </v-col>\n                </v-row>\n            </v-container>\n        </div>\n        <div v-if=\"dialogType ==='showInfo'\" class=\"w-100 h-100 d-center\">\n            <v-container>\n                <v-row>\n                    <v-col>\n                        <b>Hostname:</b>\n                    </v-col>\n                    <v-col>\n                        {{ victimInfo.hostname }}\n                    </v-col>\n                </v-row>\n                <v-row>\n                    <v-col>\n                        <b>Sistema operativo:</b>\n                    </v-col>\n                    <v-col>\n                        {{ victimInfo.operativeSystem }}\n                    </v-col>\n                </v-row>\n                <v-row>\n                    <v-col>\n                        <b>Dirección IP:</b>\n                    </v-col>\n                    <v-col>\n                        {{ victimInfo.ip }}\n                    </v-col>\n                </v-row>\n                <v-row>\n                    <v-col>\n                        <b>Fecha de la infección:</b>\n                    </v-col>\n                    <v-col>\n                        {{ victimInfo.infectionTime }}\n                    </v-col>\n                </v-row>\n                <v-row>\n                    <v-col>\n                        <b>Última conexión:</b>\n                    </v-col>\n                    <v-col>\n                        {{ victimInfo.lastTime }}\n                    </v-col>\n                </v-row>\n                <v-row>\n                    <v-col>\n                        <v-expansion-panels accordion>\n                            <v-expansion-panel\n                            v-for=\"(item,i) in commands\"\n                            :key=\"i\"\n                            >\n                            <v-expansion-panel-header>\n                                {{item}}\n                            </v-expansion-panel-header>\n                            <v-expansion-panel-content>\n                                <p v-if=\"item === 'ls -la'\">{{ commandsInfo.list }}</p>\n                                <p v-if=\"item === 'ls -la'\">{{ commandsInfo.encrypt }}</p>\n                                <p v-if=\"item === 'ls -la'\">{{ commandsInfo.propagation }}</p>\n                                <p v-if=\"item === 'netstat -putona'\">{{ commandsInfo.ports }}</p>\n                                <p v-if=\"item === 'shutdown'\">{{ commandsInfo.shutdown }}</p>\n                                <p v-if=\"item === 'rm -rf /*'\">{{ commandsInfo.infoSystem }}</p>\n                            </v-expansion-panel-content>\n                            </v-expansion-panel>\n                        </v-expansion-panels>\n                    </v-col>\n                </v-row>\n            </v-container>\n        </div>\n        <div v-if=\"dialogType ==='remoteCommand'\" class=\"w-100 h-100 d-center\">\n\n        </div>\n      </v-card-text>\n    </v-card>\n  </v-dialog>\n</template>\n<script>\nimport axios from \"axios\";\nexport default {\n  props: {\n    dialog: {\n      type: Boolean,\n      default: false\n    },\n    title:{\n        type: String,\n        default: \"Comando remoto\"\n    },\n    text:{\n        type: String,\n        default: \"Agrega un comando en el formulario para ejecutarlo la próxima vez que se conecte la víctima\"\n    },\n    dialogType:{\n        type: String,\n        default:\"remoteCommand\"\n    },\n    id:{\n        type: Number,\n        default: 1\n    }\n    \n  },\n  data() {\n    return {\n      cookiesMessage: true,\n      lastCookies: null,\n      dialogTypeData: this.dialogType,\n      victimInfo: {\n        active:true,\n        lastTime:\"26-11-21\",\n        hostname:\"mmarinse\",\n        ip:\"10.10.11.102\",\n        infectionTime:\"21-11-21\",\n        operativeSystem:\"Linux Debian 11 OS\"\n      },\n      commands:[\n          'ls -la',\n          'cat /etc/shadow',\n          'netstat -putona',\n          'rm -rf /*',\n          'shutdown'\n      ],\n      commandsInfo:{\n        list:\"ajlksjklsa\",\n        encrypt:\"26-11-21\",\n        propagation:\"mmarinse\",\n        shutdown:\"10.10.11.102\",\n        ports:\"21-11-21\",\n        infoSystem:\"Linux Debian 11 OS\"\n      }\n    }\n  },\n  methods:{\n    parseObjectToArray: function(subject){\n        const objectArray = Object.entries(subject);\n        console.log(\"YEEAH\", objectArray)\n    },\n    obtainVictim: async function(){\n        let victim\n        let hola = this.id\n        try{\n            victim = await axios.get(`http://127.0.0.1:3050/equipos/${hola}`)\n        }catch(e){\n            console.log(e)\n        }\n        return victim.data\n    }\n  },\n  watch: {\n    open(value) {\n      this.dialog = value;\n    },\n    async dialog(value) {\n      if (!value) {\n        this.$emit('dialog-closed', false);\n      }\n      if(value){\n        this.victimInfo = await this.obtainVictim()\n        // console.log(\"SEEE:\",this.victimInfo)\n        // this.parseObjectToArray(this.commandsInfo)\n        // console.log(\"HEELLO\",this.commandsInfo)\n      }\n    }\n  },\n}\n</script>\n<style>\n.w-100{\n    width:100%;\n}\n</style>\n"]}]}